---
title: "Stata hw in quarto"
author: 
  - name: Theresa Boyer
date: last-modified
categories: [stata]
format: 
  html:
    toc: true
    toc-expand: 2
    self-contained: true
    code-fold: false
    df-print: kable
    code-tools: true 
comments:
  hypothesis: 
    theme: clean
editor: source
execute:  
  warning: false
  message: false
  eval: true
editor_options: 
  chunk_output_type: console
---

```{r, echo=FALSE, message=FALSE, warning=FALSE}
library(Statamarkdown)
library(haven)
stataexe <- "D:/Program Files/Stata/StataMP-64.exe"
knitr::opts_chunk$set(engine.path=list(stata=stataexe))
```


# Notes on Pedometer Data

## 2012-2020 Data

- PEDOMETER 1 = SM-2000 pedometer

## 2016-2020 Data

- PEDOMETER 4 = Actigraph pedometer (provided by Dr. Jennifer Schrack)

## 2021 Data

- PEDOMETER 1 = Course-provided pedometer; actual pedometer received could have varied by student due to COVID-19 shipping and inventory issues
- PEDOMETER 2 = Smart phone pedometer; steps estimated from smart phone
- PEDOMETER 3 = Personal wearable pedometer; steps estimated from wearable device, e.g. Fitbit watch, Apple Watch, Garmin watch

## 2022-2025 Data

- PEDOMETER 1 = PINGKO Pedometer
- PEDOMETER 2 = Smart phone pedometer; steps estimated from smart phone
- PEDOMETER 3 = Personal wearable pedometer; steps estimated from wearable device, e.g. Fitbit watch, Apple Watch, Garmin watch
- PEDOMETER 4 = Actigraph pedometer (provided by Dr. Jennifer Schrack)



# Data 

Let's start by loading the data 

```{stata, collectcode=TRUE }
use "raw/pedometer_data_2012_2025.dta", clear
```

Then examine its structure:

## Describe

```{stata, collectcode=TRUE }
describe /* Describes data in memory or in file */
```

## Codebook

```{stata, collectcode=TRUE }
codebook /* Describe data contents */
```

## Browse

```{r}
library(haven)
library(tidyverse)
library(reactable)

# Select relevant columns
dfa_focused <- dfa %>%
  select(
    # Core measurements
    p1d1steps, p1d2steps, p2d1steps, p2d2steps, 
    mean_p1d12steps, diff_p12d1steps,
    # Activity indicators
    vigactyn, modactyn, strengthyn,
    # Context
    class_year, age, sex
  )

# Now try reactable with the focused dataset
dfa_focused %>%
  reactable(
    pagination = TRUE,
    pageSize = 10,
    defaultPageSize = 10
  )
```

# Question 1

## Summary Statistics 

Summary Statistics for Pedometer Data (Step counts and hours pedometer worn)

```{stata, collectcode=TRUE }
summ p1d1steps p1d2steps mean_p1d12steps p1d1hours p1d2hours mean_p1d12hours p2d1steps p2d1hours diff_p1d12steps diff_p12d1steps
```


```{stata plota, echo=1, results="hide"}
histogram p1d1steps, freq
quietly graph export plota.svg, replace

```

![Plota](plota.svg){width=100%}


```{stata plotb, echo=1, results="hide"}
stem p1d1steps
quietly graph export plotb.svg, replace

```

![Plotb](plotb.svg){width=100%}

## Plots and Correlation of step data

### Day 1 and Day 2 step data from Pedometer #1

- Scatter plot of Day 1 and Day 2 step data from Pedometer #1
- Includes ordinary least square regression line 
	
```{stata plot1, echo=1, results="hide"}
scatter p1d1steps p1d2steps, ytitle("Pedometer 1, Day 1 (steps)") xtitle("Pedometer 1, Day 2 (steps)") legend(off) title("Comparing steps from pedometers 1 on days 1 and 2", size(medsmall)) || lfit p1d1steps p1d2steps || lfit p1d1steps p1d1steps, ysize(10) xsize(10)
quietly graph export plot1.svg, replace

```

![Plot1](plot1.svg){width=100%}

Pearson correlation of Day 1 and Day 2 step data from Pedometer #1

```{stata, collectcode=TRUE }
	corr p1d1steps p1d2steps
```

### Day 1 step data from Pedometer #1 and Pedometer #2

Scatter plot of Day 1 step data from Pedometer #1 and Pedometer #2; includes ordinary least square regression line .


```{stata plot2, echo=1, results="hide"}
scatter p1d1steps p2d1steps, ytitle("Pedometer 1, Day 1 (steps)") xtitle("Pedometer 2, Day 1 (steps)") legend(off) title("Comparing steps from pedometers 1 and 2 on day 1", size(medsmall)) || lfit p1d1steps p2d1steps || lfit p1d1steps p1d1steps, ysize(10) xsize(10)
quietly graph export plot2.svg, replace

```

![Plot2](plot2.svg){width=100%}

Pearson correlation of Day 1 step data from Pedometer #1 and Pedometer #2
	
```{stata, collectcode=TRUE }
corr  p1d1steps p2d1steps
```

## Bland Altman plot of p1d1steps p2d1steps 

You do not have to run the following code; it is here to show you how the variables used in the Bland-Altman plot were created: 

- gen mean_p12d1steps=(p1d1steps+p2d1steps)/2 
- label var mean_p12d1steps "Mean steps for pedometer 1 and pedometer 2 on Day 1"
- gen diff_p12d1steps=p1d1steps-p2d1steps if 
- label var diff_p12d1steps "Difference in Pedometer 1 and Pedometer 2 measurements on Day 1"

```{stata plot3, echo=1, results="hide"}
	sum diff_p12d1steps
	global mean2   =r(mean)
	global lowerCL2=r(mean) - 1.96*r(sd)
	global upperCL2=r(mean) + 1.96*r(sd)
	scatter diff_p12d1steps mean_p12d1steps, legend(off) ytitle("Difference in steps between pedometers 1 and 2 on day 1") xtitle("Mean steps for pedometers 1 and 2 on day 1")  title( "Bland-Altman Plot, Pedometers 1 and 2 on Day 1" ) yline(0)  ylabel(-10000(5000)10000)  xlabel(0(10000)30000) yline($mean2, lpattern(dash)) yline($lowerCL2, lpattern(dash)) yline($upperCL2, lpattern(dash))
  quietly graph export plot3.svg, replace

```

![Plot3](plot3.svg){width=100%}

# Question 2

Cleaning: attaching label to Pedometer 1 - Notes: 2016â€“2020 Pedometer 1 was an SM-2000

```{stata, collectcode=TRUE }
label variable p1d1steps "Pedometer 1 (SM-2000/PINGKO) Day 1 Steps"
```

## Summary Statistics 

Summary Statistics  (Step counts and hours pedometer worn) Restricting anaysis to data from 2016 - 2025 (excluding 2021: no Actigraph). 

```{stata, collectcode=TRUE }
summ p1d1steps p4d1steps diff_p1p4d1steps if class_2016_2025==1 & p1d1steps!=. & p4d1steps!=.
```

### Histogram 1

```{stata plot4, echo=1, results="hide"}
histogram p1d1steps if class_2016_2025==1 & p1d1steps!=. & p4d1steps!=., freq title("Distribution of Pedometer 1 Steps")
quietly graph export plot4.svg, replace
```

![Plot4](plot4.svg){width=100%}

### Histogram 2

```{stata plot5, echo=1, results="hide"}
histogram p4d1steps if class_2016_2025==1 & p1d1steps!=. & p4d1steps!=., freq
stem p4d1steps if p1d1steps!=. & p4d1steps!=.
quietly graph export plot5.svg, replace
```

![Plot5](plot5.svg){width=100%}

## Scatter

Scatter plot of Day 1 step data from Pedometer #1 and Pedometer #4; Includes ordinary least square regression line 

```{stata plot6, echo=1, results="hide"}
scatter p1d1steps p4d1steps if class_2016_2025==1 & p1d1steps!=. & p4d1steps!=.,  xlabel(0(5000)25000) ylabel(0(10000)30000) ytitle("Step Counts from SM-2000/PINGKO on Day 1") xtitle("Step Counts from Actigraph on Day 1") legend(off) title("Comparing Two Pedometer Step Counts on Day 1", size(medsmall)) || lfit p1d1steps p4d1steps || lfit p1d1steps p1d1steps if class_2016_2025==1, ysize(10) xsize(10)
quietly graph export plot6.svg, replace
```

![Plot6](plot6.svg){width=100%}

Pearson correlation of Day 1 step data from Pedometer #1 and Pedometer #4
```{stata, collectcode=TRUE }
corr  p1d1steps p4d1steps if class_2016_2025==1 & p1d1steps!=. & p4d1steps!=.
```

## Bland Altman plot of p1d1steps p4d1steps

You do not have to run the following code; it is here to show you how the variables used in the Bland-Altman plot were created: 

-	gen mean_p1p4d1steps=(p1d1steps+p4d1steps)/2 if class_2016_2025==1
-	label var mean_p1p4d1steps "Mean steps for pedometer 1 and pedometer 4 on Day 1"
-	gen diff_p1p4d1steps=p1d1steps- p4d1steps if class_2016_2025==1
-	label var diff_p1p4d1steps "Difference in Pedometer 1 and Pedometer 4 measurements on Day 1"

```{stata plot7, echo=1, results="hide"}
sum diff_p1p4d1steps if class_2016_2025==1
global mean3   =r(mean)
global lowerCL3=r(mean) - 1.96*r(sd)
global upperCL3=r(mean) + 1.96*r(sd)
scatter diff_p1p4d1steps mean_p1p4d1steps if class_2016_2025==1 & p1d1steps!=. & p4d1steps!=., legend(off) ytitle("Difference in Steps, Day 1 (SM-2000/PINGKO - Actigraph)") xtitle("Mean steps of SM-2000/PINGKO and Actigraph, Day 1")  title( "Bland-Altman Plot, SM-2000/PINGKO vs Actigraph, Day 1" ) yline(0) ylabel(-10000(5000)10000) xlabel(2000(5000)24000) yline($mean3, lpattern(dash)) yline($lowerCL3, lpattern(dash)) yline($upperCL3, lpattern(dash))
quietly graph export plot7.svg, replace
```

![Plot7](plot7.svg){width=100%}

# Question 3

## Option 1: past 30 days (data available for 2012-2022)

OPTION 1: Use questionnaire data that asked about physical activity from the past 30 days (data available for 2012-2022)

For this question we use the complete data i.e. collected since 2012
We have created an overall physical activity score - the variable "active" in the Stata file.

```
	*	DON'T RUN, THIS IS ONLY FOR 
		/*gen active = 0
		replace active = active+1 if wbyn=="Yes"
		replace active = active+2 if vigactyn=="Yes"
		replace active = active+1 if modactyn=="Yes"
		replace active = active+1 if strengthyn=="Yes"
		replace active = active-1 if tvviduse=="4 hours" | tvviduse=="5 hours or more" | compuse=="4 hours" | compuse=="5 hours or more"
		label variable active "Overall Activity Score"*/
```

This score can range from -1 to 5 points (higher score / higher activity level).
It combines the yes/no responses for types of physical activity with a penalty for high television or computer use. 

### Codebook
```{stata, collectcode=TRUE }
	codebook active 
```

### Summary

```{stata, collectcode=TRUE }
	summ active
```

### Scatter

```{stata plot8, echo=1, results="hide"}
scatter p1d1steps active || lfit p1d1steps active 
quietly graph export plot8.svg, replace
```

![Plot8](plot8.svg){width=100%}

###  Regressions

Potential linear regression models using "active" variable, which incorporates information based on past 30 days (2012-2022 data). From minimal model 1 to max model 3. 

#### Model 1
```{stata, collectcode=TRUE }
regress mean_p1d12steps active meanhours
```

#### Model 2
```{stata, collectcode=TRUE }
regress mean_p1d12steps active meanhours age
```

#### Model 3
```{stata, collectcode=TRUE }
regress mean_p1d12steps active meanhours age sex_numeric
```

## Option 2: past 2 days (data available for 2020â€“2025 only)

OPTION 2: Use questionnaire data that asked about physical activity data from the past 2 days (data available for 2020â€“2025 only)

For this question we use 2020-2025 data
We have created an overall physical activity score - the variable "active_2day" in the Stata file.

```
	/*gen active_2day = 0
	replace active_2day = active_2day+1 if wbyn_2day=="Yes"
	replace active_2day = active_2day+2 if vigactyn_2day=="Yes"
	replace active_2day = active_2day+1 if modactyn_2day=="Yes"
	replace active_2day = active_2day+1 if strengthyn_2day=="Yes"
	replace active_2day = active_2day-1 if tvviduse_2day=="4 hours" | tvviduse_2day=="5 hours or more" | compuse_2day=="4 hours" | compuse_2day=="5 hours or more"
	label variable active_2day "Overall Activity Score - 2 days"*/
```

This score can range from -1 to 5 points (higher score / higher activity level).
It combines the yes/no responses for types of physical activity with a penalty for high television or computer use. 


### Codebook
```{stata, collectcode=TRUE }
	codebook active_2day 
```

### Summary

```{stata, collectcode=TRUE }
	summ active_2day
```

NOTE for 2021 Students: Feel free to look at pedometers 1, 2, or 3 below

### Scatter

Is there an association between activity and pedometer data (average step count)?

```{stata plot9, echo=1, results="hide"}
scatter p1d1steps active_2day || lfit p1d1steps active_2day 
quietly graph export plot9.svg, replace
```

![Plot9](plot9.svg){width=100%}

###  Regressions

Potential linear regression models using "active_2day" variable, which incorporates information based on past 2 days (2020-22 data only). Regression models looking at Pedometer 1 

#### Model 1
```{stata, collectcode=TRUE }
regress mean_p1d12steps active_2day meanhours
```

#### Model 2
```{stata, collectcode=TRUE }
regress mean_p1d12steps active_2day meanhours age
```

#### Model 3
```{stata, collectcode=TRUE }
regress mean_p1d12steps active_2day meanhours age sex_numeric
```